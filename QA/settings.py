"""
Django settings for QA project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-ef4a%foaf+kz_(6-i!7kk(_bsfcd2mitg^j@#*lv1%wq&pp3jc'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
SECRET_KEY = os.environ.get(
    'DJANGO_SECRET_KEY', 'django-insecure-ef4a%foaf+kz_(6-i!7kk(_bsfcd2mitg^j@#*lv1%wq&pp3jc')
# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'qaApp.apps.QaappConfig',
    'users.apps.UsersConfig',
    'graphene_django',
    'graphql_auth',
    'django_filters',
    'graphql_jwt.refresh_token.apps.RefreshTokenConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
AUTH_USER_MODEL = 'users.CustomUser'

ROOT_URLCONF = 'QA.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'QA.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
if os.getcwd() == '/app':
    import dj_database_url
    DATABASES = {
        'default': dj_database_url.config(default='postgres://localhost')}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
AUTHENTICATION_BACKENDS = ['graphql_auth.backends.GraphQLAuthBackend',
                           'django.contrib.auth.backends.ModelBackend', ]
GRAPHENE = {
    "SCHEMA": "QA.schema.schema",
    'SCHEMA_OUTPUT': 'schema.graphql',  # defaults to schema.json,
    # Defaults to None (displays all data on a single line)
    'SCHEMA_INDENT': 2,
    "MIDDLEWARE": ['graphql_jwt.middleware.JSONWebTokenMiddleware', ],

}
GRAPHQL_JWT = {"JWT_ALLOW_ANY_CLASSES": ["graphql_auth.mutations.Register",
                                         "graphql_auth.mutations.VerifyAccount", "graphql_auth.mutations.ObtainJSONWebToken",  "graphql_auth.mutations.RefreshToken", "graphql_auth.mutations.RevokeToken", ],
               "JWT_VERIFY_EXPIRATION": True,
               "JWT_LONG_RUNNING_REFRESH_TOKEN": True}


GRAPHQL_AUTH = {
    "LOGIN_ALLOWED_FIELDS": ["username", ],
    "REGISTER_MUTATION_FIELDS": ["username", "signup_as"],
    "SEND_ACTIVATION_EMAIL": False,
    "ALLOW_PASSWORDLESS_REGISTRATION": False
}

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
